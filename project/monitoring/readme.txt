

http://localhost:8080/actuator/health
http://localhost:8080/auth

http://localhost:8080/api/v1/incident/
http://localhost:8080/api/v1/incident/1


**** Курсовая работа.

Тема Прототип системы мониторинга событий внешней видеосистемы.

Что планировалось сделать:
1. Эмулятор событий от внешней видеосистемы.
    WebFlux.

2. Микросервис - приемщик событий от эмулятора.  24/7.
  В прототипе -стартует по таймеру со стартом приложения, 3 минуты слушает и прекращает.
  Интеграция с эмулятором - по REST. WebClient.
  Принимает события и отправляет в топик Кафки.

3. Кафка развернута в докере.

4. Подсистема мониторинга. Только Backend.
4.1. Микросервис приемки сообщения из кафки.
   Принимает сообщения, преобразовывает их в модель  и записывает в БД.

4.2. Микросервис с REST-API, выдающим список инцидентов.

4.3. Микросервис с REST-API, выдающим  аналитику - состояние оперативной обстановки.

5.  База данных в докере. Postgressql.

=======================================
Было трудно с:
Security и ACL

Не сделано:
Работа с Кафкой.
ACL на  БД postgres

=======================================
Что cделано:
1. Эмулятор событий от внешней видеосистемы.  WebFlux.

2. Кафки нет.

3. Микросервис - приемщик событий от эмулятора. Стартует, слушает 3 минуты.
  Интеграция с эмулятором - по REST. WebClient.
  Принимает события, преобразовывает их в модель "Карточка инцидента" и записывает модель в БД.

4. Подсистема мониторинга. Только Backend.
4.1. Микросервис с REST-API, выдающим список инцидентов.
     Spring Security. ACL на класс Action.
	 Предназначен для операторов с ролью OPERATOR и ADMIN.
	 Оператор - видит список инцидентов и выполняет реагирование.

Пример
	 PATCH localhost:8080/api/v1/incident/1

	 с телом
	 {
         "actionText" : "Перерыв на обед!",
         "actionTypeId" : 2
     }

	 Операторы видят только "свои" реагирования, которые созданы ими. Чужие объекты - не видят.
	 Администраторы - видят все объекты.

	 Проверяем это на урл -  с разными пользователями:
	 GET http://localhost:8080/api/v1/incident/

	 Админ видит инциденты и все реагирования по ним.
	 Оператор видит инциденты и только те реагирования по ним, которые он сам и создал.

	 https://gyazo.com/e9f2c9092599f2a145b854a581a2cd81


4.3. Микросервис с REST-API, выдающим  аналитику - состояние оперативной обстановки.
	 В нашем случае это - метрика частоты инцидентов.
     Actuator.
	 Предназначен для руководителей с ролью HEAD.

	 GET	localhost:8080/actuator/health

5.  База данных H2.

===================================================

Сущности вне БД:
Событие системы видеонаблюдения.

Сущности БД:

Устройства (камеры)

Incident - "Карточка инцидента"

ActionType - Справочник вариантов реагирования (ложная тревога, пожар,..)

Action - Действия по реагированию.

======================================


